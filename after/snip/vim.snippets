global !p

pairs = {
  '[': ']',
  '{': '}',
  '(': ')',
  ']': '[',
  '}': '{',
  ')': '('
};

# ${1:text} `!p snip.rv = pair(t[1])`
def pair(v):
  for p in pairs:
    if v.startswith(p):
      return pairs[p]
  return ''

# ${5:e}`!p snip.rv = complete(t[5], ['endif', 'else', 'elseif'])`
def complete(t, opts):
  if t:
    opts = [ m[len(t):] for m in opts if m.startswith(t) ]
  if len(opts) == 1:
    return opts[0]
  return '(' + '|'.join(opts) + ')'

endglobal

# GENERAL

snippet g "let g:..." b
let g:${1:varname} = ${2:val} `!p snip.rv = pair(t[2]) `
endsnippet

snippet let "desc" b
let ${VISUAL} = ${2:val}
endsnippet

snippet so "!::source" b
" !::exe [so %]
endsnippet

snippet for "for v in list" b
for ${1:idx} in ${2:range(${3:len})}
	$0
endfor
endsnippet

# IF STATEMENTS

snippet if "if condition end" b
if ${1:${2:var} == ${3:value}}
	${4:let a = 1} 
${5:end}
endsnippet

snippet ife "if | end" b
if empty(${1:condition}) | ${2:return} | end
endsnippet
snippet ifne "if | end" b
if !empty(${1:condition}) | ${2:return} | end
endsnippet

# exists
snippet ifx "if exists" b
if exists('g:${1:name}')
	${2:unlet g:$1}
end
endsnippet
snippet ifnx "if not exists" b
if !exists('g:${1:name}')
	${2:unlet g:$1}
end
endsnippet

# CONDITIONNAL EXPRESSIONS

# has
snippet "(!?has)" "(!)has" r
`!p snip.rv = match.group(1)`('$3')
endsnippet

snippet "(!?)exi?s?t?s?" "(!) exists" r
`!p snip.rv = match.group(1)`exists(${1:'${2:val}'})
endsnippet

# STRUCTURES

snippet fu "fu! endfu" b
function! ${1:name} ()
endfunc
endsnippet
snippet fn "function! endfunction" b
function! ${1:name} (${2:args})
endfunc
endsnippet
snippet fs "function! s: endfunction" b
function! s:${1:name} (${2:args})
endfunction
endsnippet
snippet : "key: value"
'${1:key}': ${2:'${3:value}'},
endsnippet

# OTHER

snippet save "save options" b
let saved_${1:opt} = &$1
${2:let &$1 = $0}
let &$1 = saved_$1
endsnippet
snippet fileinfo "File header"
" File: `!v expand('%:t') `
" Author: romgrk
" Date: `!v system("date '+%d %b %Y'")`
" Description: ${1:here}
endsnippet

snippet guard "script reload guard" b
if exists('${1:did_`!p snip.rv = snip.fn.replace('.','_')`}')
	finish
end
let $1 = ${3:1}
endsnippet

snippet auf "autoroup file" b
exe 'augroup ' . expand('<sfile>')
au!
au $0
exe 'augroup END'
endsnippet

snippet exp "expand"
expand('${1:%}$0')
endsnippet

snippet hi "highlight" b
hi! ${1:Group} ${2:guifg=${3:red}} ${4:guibg=${5:none}} ${6:gui=${7:none}}
endsnippet

snippet command "command" b
command! -nargs=${3:*} -bar -range ${1:Name} ${2:call function}
endsnippet

snippet link "hi link" b
hi! ${1:link} ${2:Group} ${3:Linked}
endsnippet

snippet try "try catch" b
try
	${VISUAL}
catch /${2:.*}/ | $0 | endtry
endsnippet
